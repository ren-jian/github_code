<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <title>菜鸟教程(runoob.com)</title>
    <base href="file:///E:/code/html/" target="_blank">
    <!--该标签作为HTML文档中所有的链接标签的默认链接:-->
    <link rel="stylesheet" type="text/css" href="mystyle.css">
    <!--定义了文档与外部资源之间的关系,通常用于链接到样式表:外部样式表/外部引用-->
    <style type="text/css">
        body {
            background-color: rgb(209, 208, 168)
        }
        
        p {
            color: blue
        }
    </style>
    <!--<style>标签定义了HTML文档的样式文件引用地址,在<style>元素中你也可以直接添加样式来渲染 HTML文档:内部样式表-->
    <!--meta标签描述了一些基本的元数据。-->
    <meta name="keywords" content="HTML, CSS, XML, XHTML, JavaScript">
    <!--为搜索引擎定义关键词-->
    <meta name="description" content="免费 Web & 编程 教程">
    <!--为网页定义描述内容:-->
    <meta name="author" content="Runoob">
    <!--定义网页作者:-->
    <meta http-equiv="refresh" content="30">
    <!--每30秒钟刷新当前页面:-->
    <style type="text/css">
        thead {
            color: green;
        }
        
        tbody {
            color: rgb(255, 0, 0);
        }
        
        tfoot {
            color: red;
        }
    </style>
</head>

<body style="background-color:rgb(209, 208, 168)">
    <h1>我的第一个h1标题</h1>
    <h3 style="text-align:center;">居中对齐的标题</h3>
    <p>我的第一个段落。</p>
    <!--内联样式-->
    <p style="color:rgb(251, 255, 0);margin-left:20px; ">这是另外一个段落。</p>
    <!--我们可以使用font-family（字体），color（颜色），和font-size（字体大小）属性来定义字体的样式:-->
    <p style="font-family:arial;color:red;font-size:20px;">一个段落1。</p>
    <a href="http://www.runoob.com ">这是一个链接</a>
    <img src=".images/logo.png " width="100 " height="60 " alt="图片丢失了" /><br/>
    <!--alt 属性用来为图像定义一串预备的可替换的文本，在浏览器无法载入图像时，替换文本属性告诉读者她们失去的信息。-->
    <img src="images/html属性.PNG " width="600 " height="220 " />
    <hr> 标签在 HTML 页面中创建水平线。
    <!-- 这是一个注释 -->
    <b>粗体 </b><strong>加重 </strong><em>着重 </em><i>斜体 </i><small>小号 </small><sub>下标 </sub><sup>上标 </sup><ins>插入 </ins><del>删除 </del>
    <code>计算机代码 </code><kbd>键盘码 </kbd><samp>计算机代码样本 </samp><var>变量</var><pre>预格式文本</pre>
    <abbr>缩写</abbr><address>地址</address><bdo>文字方向</bdo>
    <blockquote>长的引用</blockquote><q>短的引用</q><cite> 引证，引用 </cite><dfn>定义项目 </dfn>
    <a href="http://www.runoob.com/ " target="_blank ">访问菜鸟教程!</a>
    <p>如果你将"target "属性设置为&quot;"_blank "&quot;, 链接将在新窗口打开。</p>
    <a id="tips ">有用的提示部分</a><a href="#tips ">访问有用的提示部分,跳转到base默认链接</a>
    <!--注释： 请始终将正斜杠添加到子文件夹。假如这样书写链接：href="http://www.runoob.com/html "，就会向服务器产生两次 HTTP 请求。
    这是因为服务器会添加正斜杠到这个地址，然后创建一个新的请求，就像这样：href="http://www.runoob.com/html/ "。-->
    <p>点击太阳或其他行星，注意变化：</p>
    <img src="./images/planets.gif" width="145" height="126" alt="Planets" usemap="#planetmap">
    <map name="planetmap"><!--<map>定义图像地图-->
    <area shape="rect" coords="0,0,82,126" alt="Sun" href="sun.htm"><!--<area>定义图像地图中的可点击区域-->
    <area shape="circle" coords="90,58,3" alt="Mercury" href="mercur.htm"><!--coordinates坐标-->
    <area shape="circle" coords="124,58,8" alt="Venus" href="venus.htm"><!--rect矩形为x1,y1,x2,y2，circle圆形为x,y,radius-->
    </map>
    <table border="1">
        <caption>Monthly savings</caption>
        <!--定义表格标题-->
        <colgroup>
            <col span="2" style="background-color:red">
            <col style="background-color:yellow">
        </colgroup>
        <!--<colgroup> 标签用于对表格中的列进行组合，以便对其进行格式化。-->
        <tr>
            <th>ISBN</th>
            <th>Title</th>
            <th>Price</th>
        </tr>
        <tr>
            <td>3476896</td>
            <td>My first HTML</td>
            <td>$53</td>
        </tr>
        <tr>
            <td>5869207</td>
            <td>My first CSS</td>
            <td>$49</td>
        </tr>
    </table>
    </table>
    <table border="1">
        <thead>
            <tr>
                <th>Month</th>
                <th>Savings</th>
            </tr>
        </thead>
        <!--表格的页眉-->
        <tfoot>
            <tr>
                <td>Sum</td>
                <td>$180</td>
            </tr>
        </tfoot>
        <!--表格的页脚-->
        <tbody>
            <tr>
                <td>January</td>
                <td>$100</td>
            </tr>
            <tr>
                <td>February</td>
                <td>$80</td>
            </tr>
        </tbody>
        <!--表格的主体-->
    </table>
    <ul>
        <li>无序</li>
        <li>列表</li>
    </ul>
    <ol>
        <li>有序</li>
        <li>列表</li>
    </ol>
    <dl>
        <dt>Coffee</dt>
        <dd>- black hot drink</dd>
        <dt>Milk</dt>
        <dd>- white cold drink</dd>
    </dl>
    <!--自定义列表不仅仅是一列项目，而是项目及其注释的组合。自定义列表以 <dl> 标签开始。每个自定义列表项以 <dt> 开始。每个自定义列表项的定义以 <dd> 开始。-->
    <!--内联元素在显示时通常不会以新行开始，实例: <b>, <td>, <a>, <img>。块级(区块)元素在浏览器显示时，通常会以新行来开始（和结束），实例: <h1>, <p>, <ul>, <table>-->
    <div style="color:#0000FF">
        <h3>这是一个在 div 元素中的标题。</h3>
        <p>这是一个在 div 元素中的文本。</p>
    </div>
    <!--HTML <div> 元素是块级元素，它可用于组合其他 HTML 元素的容器。<div> 元素没有特定的含义。它取代了使用表格定义布局的老式方法。-->
    <p>我的母亲有 <span style="color:blue;font-weight:bold">蓝色</span> 的眼睛，我的父亲有 <span style="color:darkolivegreen;font-weight:bold">碧绿色</span> 的眼睛。</p>
    <!--HTML <span> 元素是内联元素，可用作文本的容器<span> 元素也没有特定的含义。当与 CSS 一同使用时，<span> 元素可用于为部分文本设置样式属性。-->
    <!--使用 <div> 元素的网页布局-->
    <div id="container" style="width:500px">
        <div id="header" style="background-color:#FFA500;">
            <h1 style="margin-bottom:0;">主要的网页标题</h1>
        </div>
        <div id="menu" style="background-color:#FFD700;height:200px;width:100px;float:left;">
            <b>菜单</b><br> HTML
            <br> CSS
            <br> JavaScript
        </div>
        <div id="content" style="background-color:#EEEEEE;height:200px;width:400px;float:left;">
            内容在这里</div>

        <div id="footer" style="background-color:#FFA500;clear:both;text-align:center;">
            版权 © runoob.com</div>
    </div>
    <!--使用 <table> 元素的网页布局，第一和最后一行使用 colspan 属性来横跨两列
        即使可以使用 HTML 表格来创建漂亮的布局，但设计表格的目的是呈现表格化数据 - 表格不是布局工具！-->
    <table width="500" border="0">
        <tr>
            <td colspan="2" style="background-color:#FFA500;">
                <h1>主要的网页标题</h1>
            </td>
        </tr>
        <tr>
            <td style="background-color:#FFD700;width:100px;">
                <b>菜单</b><br> HTML
                <br> CSS
                <br> JavaScript
            </td>
            <td style="background-color:#eeeeee;height:200px;width:400px;">
                内容在这里</td>
        </tr>
        <tr>
            <td colspan="2" style="background-color:#FFA500;text-align:center;">
                版权 © runoob.com</td>
        </tr>
    </table>
    <!--表单元素是允许用户在表单中输入内容,比如：文本域(textarea)、下拉列表、单选框(radio-buttons)、复选框(checkboxes)等等。-->
    <form>
        First name: <input type="text" name="firstname"><br> Last name: <input type="text" name="lastname">
        <!--注意:表单本身并不可见。同时，在大多数浏览器中，文本域的缺省宽度是20个字符。-->
        Password: <input type="password" name="pwd"><br>
        <!--radio单选框，name相同的时候只能选一个-->
        <input type="radio" name="sex" value="male">Male<br>
        <input type="radio" name="sex" value="female">Female<br>
        <!--checkbox定义了复选框. 用户需要从若干给定的选择中选取一个或若干选项-->
        <input type="checkbox" name="vehicle" value="Bike">I have a bike<br>
        <input type="checkbox" name="vehicle" value="Car">I have a car<br>
    </form>
    <form name="input" action="sun.htm" method="get">
        Username: <input type="text" name="user">
        <input type="submit" value="Submit">
        <!--label定义了 <input> 元素的标签，一般为输入标题-->
        <label for="male">Male</label>
        <input type="radio" name="sex" id="male" value="male"><br>
    </form>
    <textarea rows="10" cols="30">
            我是一个文本框。
    </textarea>
    <!--<fieldset>定义了一组相关的表单元素，并使用外框包含起来，<legend>定义了<fieldset>元素的标题-->
    <form>
        <fieldset>
            <legend>Personalia:</legend>
            Name: <input type="text"><br> Email: <input type="text"><br> Date of birth: <input type="text">
        </fieldset>
    </form>
    <!--<select>定义了下拉选项列表，<optgroup>定义选项组，<option>定义下拉列表中的选项-->
    <select>
        <optgroup label="Swedish Cars">
            <option value="volvo">Volvo</option>
            <option value="saab">Saab</option>
        </optgroup>
        <optgroup label="German Cars">
            <option value="mercedes">Mercedes</option>
            <option value="audi">Audi</option>
        </optgroup>
    </select>
    <iframe src="mercur.htm" width="200" height="200"></iframe>
    <iframe src="venus.htm" frameborder="0"></iframe>
    <!--frameborder 属性用于定义iframe表示是否显示边框。设置属性值为 "0" 移除iframe的边框:-->
    <iframe src="sun.htm" name="iframe_a"></iframe>
    <p><a href="http://www.runoob.com" target="iframe_a">RUNOOB.COM</a></p>
    <!--使用iframe来显示目标链接页面-->
    <!--<script> 标签用于定义客户端脚本，比如 JavaScript。<script> 元素既可包含脚本语句，也可通过 src 属性指向外部脚本文件。
        JavaScript 最常用于图片操作、表单验证以及内容动态更新。<noscript> 标签提供无法使用脚本时的替代内容，比方在浏览器禁用脚本时，或浏览器不支持客户端脚本时。-->
    <p id="demo">JavaScript 能够直接写入 HTML 输出流中：</p>
    <script>
        document.write("Hello World!")
        document.write("<h1>这是一个标题</h1>")

        function myFunction() {
            document.getElementById("demo").innerHTML = "Hello JavaScript!"
            x = document.getElementById("demo") // 找到元素
            x.style.color = "#ff0000" // 改变样式
        }
    </script>
    <noscript>抱歉，你的浏览器不支持 JavaScript!</noscript>
    <button type="button" onclick="myFunction()">点我</button>
    <p>HTML 中的预留字符必须被替换为字符实体。小于号(&lt;)，空格(&nbsp;)，大于号(&gt;)，双引号(&quot;)</p>
    <p>URL - 统一资源定位器：scheme://host.domain:port/path/filename<br> scheme - 定义因特网服务的类型。最常见的类型是 http<br> host - 定义域主机（http 的默认主机是 www）<br> domain - 定义因特网域名，比如 runoob.com<br> :port - 定义主机上的端口号（http 的默认端口号是 80）<br> path - 定义服务器上的路径（如果省略，则文档必须位于网站的根目录中）。<br> filename
        - 定义文档/资源的名称</p>
    <p>http 超文本传输协议 以 http:// 开头的普通网页。不加密。<br> https 安全超文本传输协议 安全网页，加密所有信息交换。<br> ftp 文件传输协议 用于将文件下载或上传至网站。<br> file 您计算机上的文件。</p>
    <p>URL 字符编码 URL 只能使用 ASCII 字符集.<br> URL 编码使用 "%" 其后跟随两位的十六进制数来替换非 ASCII 字符。<br> URL 不能包含空格。URL 编码通常使用 + 来替换空格。</p>
</body>

</html>